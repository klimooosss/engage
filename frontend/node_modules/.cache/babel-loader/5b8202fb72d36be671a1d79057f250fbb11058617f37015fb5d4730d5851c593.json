{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mynew\\\\Desktop\\\\engage_frontend\\\\src\\\\components\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess(false);\n\n    // Mock authentication\n    if (form.email && form.password) {\n      setSuccess(true);\n      setTimeout(() => {\n        navigate('/dashboard');\n      }, 500);\n    } else {\n      setError('Please fill in all fields');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-btn\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Signing In...' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-success\",\n        children: \"Login successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"gvMqNP5bnXCiKme2keB4SKSIU5M=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignIn","_s","form","setForm","email","password","loading","setLoading","error","setError","success","setSuccess","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/mynew/Desktop/engage_frontend/src/components/SignIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignIn = () => {\r\n  const [form, setForm] = useState({ email: '', password: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = e => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess(false);\r\n\r\n    // Mock authentication\r\n    if (form.email && form.password) {\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        navigate('/dashboard');\r\n      }, 500);\r\n    } else {\r\n      setError('Please fill in all fields');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>Sign In</h2>\r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button className=\"cta-btn\" type=\"submit\" disabled={loading}>\r\n          {loading ? 'Signing In...' : 'Sign In'}\r\n        </button>\r\n        {error && <div className=\"auth-error\">{error}</div>}\r\n        {success && <div className=\"auth-success\">Login successful!</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}